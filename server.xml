<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
		<!--The following features are available in all editions of Liberty.-->
		<feature>cdi-1.2</feature>
		<feature>ejbLite-3.2</feature>
		<feature>el-3.0</feature>
		<feature>jacc-1.5</feature>
		<feature>jdbc-4.1</feature>
		<feature>jndi-1.0</feature>
		<feature>jsf-2.2</feature>
		<feature>localConnector-1.0</feature>
		<feature>servlet-3.1</feature>

		<!--The following features are available in Liberty base and above.-->
		<feature>batch-1.0</feature>
		<feature>ejbRemote-3.2</feature>
		<feature>jca-1.7</feature>
		<feature>jms-2.0</feature>
		<feature>mdb-3.2</feature>
    </featureManager>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  host="*"
                  httpPort="9080" />


    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <webApplication contextRoot="atm_movil" location="atm_movil-webclient-1.1-SNAPSHOT.war" />

    <connectionManager id="DB2-Connections" minPoolSize="5" maxPoolSize="50"/>
    <dataSource id="ATMMovilDB" jndiName="jdbc/atm_movil" connectionManagerRef="DB2-Connections" isolationLevel="TRANSACTION_READ_COMMITTED">
      <jdbcDriver>
        <library name="DB2" description="DB2 JDBC driver jar">
          <file id="db2jcc4" name="${shared.resource.dir}/db2jcc.jar"/>
        </library>
      </jdbcDriver>
      <properties.db2.jcc serverName="${env.JDBC_HOST}" portNumber="${env.JDBC_PORT}" databaseName="${env.JDBC_DB_NAME}"
        user="${env.JDBC_USER}" password="${env.JDBC_PASSWORD}"/> <!-- It won't use a containerAuthDataRef for some reason, so defining credentials here instead -->
      </dataSource>

</server>
